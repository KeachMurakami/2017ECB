AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
filter(AlltoPSII >= 0)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
geom_smooth() +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
filter(AlltoPSII >= 0)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
stat_smooth(n = 5) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
filter(AlltoPSII >= 0)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
stat_smooth(n = 200) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
filter(AlltoPSII >= 0)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
stat_smooth(n = 1) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
filter(AlltoPSII >= 0)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
stat_smooth(span = 100) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
filter(AlltoPSII >= 0)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
stat_smooth(span = 3) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
filter(AlltoPSII >= 0)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
filter(AlltoPSII >= 0)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
stat_smooth(method = "gam") +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
ddd <-
fread("~/Dropbox/2016/1613/LI.csv") %>%
select(-HHMMSS) %>%
group_by(Trtm, PlantID, Light_Col, Light_Level) %>%
summarise_each(funs = "mean") %>%
select(Trtm:Light_Col, Photo, PARi)
library(lmerTest)
dmo <-
ddd %>%
mutate(ID = paste0(Trtm, PlantID)) %>%
select(-PlantID, col = Light_Col) %>%
lme4::lmer(data = ., formula = Photo ~ PARi + Trtm + col + (1|ID)) %>%
ranef
dmo %>% step
dmo %>% summary
str
AIC
summary
ddd %>%
do(lm(data = ., Photo ~ PARi) %>% tidy) %>%
select(Trtm:estimate) %>%
spread(term, estimate) %>%
group_by(Trtm, Light_Col) %>%
summarise_each(funs = "mean")
# select(Photo, PARi)
ggplot(aes(x = PARi, y = Photo, col = Light_Col, shape = factor(PlantID), group = paste(Light_Col, PlantID))) +
geom_smooth(method = "lm") +
geom_point() +
facet_grid(Trtm ~ .)
ddd %>%
do(lm(data = ., Photo ~ PARi) %>% tidy)
ddd %>%
do(lm(data = ., Photo ~ PARi) %>% tidy) %>%
select(Trtm:estimate)
ddd %>%
do(lm(data = ., Photo ~ PARi) %>% tidy)
ddd %>%
mutate(ID = paste0(Trtm, PlantID)) %>%
select(-PlantID, col = Light_Col) %>%
lme4::lmer(data = ., formula = Photo ~ PARi + Trtm + col + (1|ID)) %>%
ranef
ddd %>%
mutate(ID = paste0(Trtm, PlantID)) %>%
select(-PlantID, col = Light_Col)
Mole_abs
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
)
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
.$AlltoPSII
Reduce(Join_by, list(Abs_PSII, Abs_PSI)) %>%
filter(wavelength %% 1 == 0) %>%
na.omit
Mole_abs <-
Reduce(Join_by, list(Abs_PSII, Abs_PSI)) %>%
filter(wavelength %% 1 == 0) %>%
na.omit
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
) %>%
.$AlltoPSII
Mole_abs
EED_dat <-
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
)
EED_dat$AlltoPSII
EED_dat %>%
mutate(c(NA, head(EED_dat$AlltoPSII, -1))
)
EED_dat %>%
mutate(All2 = c(NA, head(EED_dat$AlltoPSII, -1))
EED_dat %>%
mutate(All2 = c(NA, head(EED_dat$AlltoPSII, -1))) %>% head
EED_dat %>%
mutate(All2 = c(0, head(EED_dat$AlltoPSII, -1)),
AlltoPSII = (AlltoPSII + All2) / 2)
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0))
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0),
All2_back = c(0, head(EED_dat$AlltoPSII, -1))
) %>% head
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0),
All2_back = c(0, head(EED_dat$AlltoPSII, -1)),
AlltoPSII = (AlltoPSII + All2_for + All2_back) / 3)
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0),
All2_back = c(0, head(EED_dat$AlltoPSII, -1)),
AlltoPSII = (AlltoPSII + All2_for + All2_back) / 3) %>%
filter(AlltoPSII >= 0)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0),
All2_back = c(0, head(EED_dat$AlltoPSII, -1)),
AlltoPSII = (AlltoPSII + All2_for + All2_back) / 3) %>%
filter(wavelength > 400)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
library(ggplo2)
library(ggplot2)
devtools::source_url("https://raw.githubusercontent.com/KeachMurakami/Sources/master/Startup_silent.R")
library(EBImage)
which_mean <- function(x) x %>% which %>% mean
Join_by <- function(x, y) join(x, y, by = "wavelength")
Hoge_PSII <- readImage("~/Dropbox/Publish/2016PgEstimate/Data/Hoge_PSII.png")
Hoge_PSI <- readImage("~/Dropbox/Publish/2016PgEstimate/Data/Hoge_PSI.png")
Abs_PSII <-
(Hoge_PSII[, , 1] < .8 & Hoge_PSII[, , 3] > .8) %>%
.@.Data %>%
data.frame %>%
t %>%
aaply(.margins = 2, .fun = which_mean) %>%
data.frame(wavelength = seq(400, 800, by = 1), abs = (dim(Hoge_PSII)[2] - .)) %>%
select(wavelength, PSII = abs)
Abs_PSI <-
(Hoge_PSI[, , 1] > .8 & Hoge_PSI[, , 3] < .8) %>%
.@.Data %>%
data.frame %>%
t %>%
aaply(.margins = 2, .fun = which_mean) %>%
data.frame(wavelength = seq(400, 800, by = 1), abs = (dim(Hoge_PSI)[2] - .)) %>%
select(wavelength, PSI = abs)
Mole_abs <-
Reduce(Join_by, list(Abs_PSII, Abs_PSI)) %>%
filter(wavelength %% 1 == 0) %>%
na.omit
EED_dat <-
Mole_abs %>%
transmute(
wavelength,
AlltoPSII = PSII / (1.5 * PSI + PSII)
)
waiver
waiver()
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0),
All2_back = c(0, head(EED_dat$AlltoPSII, -1)),
AlltoPSII = (AlltoPSII + All2_for + All2_back) / 3) %>% # get moving average
filter(wavelength > 400)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_xy(c(380, 770, 0, 1.0)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
scale_y_continuous(labels = c("0   ", "0.25", "0.50", "0.75", "1.00"), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0),
All2_back = c(0, head(EED_dat$AlltoPSII, -1)),
AlltoPSII = (AlltoPSII + All2_for + All2_back) / 3) %>% # get moving average
filter(wavelength > 400)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_x(c(380, 770)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
scale_y_continuous(labels = c("0   ", "0.25", "0.50", "0.75", "1.00"),
breaks = c(0, 0.25, 0.5, 0.75, 1),
limits = c(0, 1.0)) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0),
All2_back = c(0, head(EED_dat$AlltoPSII, -1)),
AlltoPSII = (AlltoPSII + All2_for + All2_back) / 3) %>% # get moving average
filter(wavelength > 400)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_x(c(380, 770)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
scale_y_continuous(labels = c("0    ", "0.25", "0.50", "0.75", "1.00"),
breaks = c(0, 0.25, 0.5, 0.75, 1),
limits = c(0, 1.0),
expand = T) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0),
All2_back = c(0, head(EED_dat$AlltoPSII, -1)),
AlltoPSII = (AlltoPSII + All2_for + All2_back) / 3) %>% # get moving average
filter(wavelength > 400)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_x(c(380, 770)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
scale_y_continuous(labels = c("0    ", "0.25", "0.50", "0.75", "1.00"),
breaks = c(0, 0.25, 0.5, 0.75, 1),
limits = c(0, 1.0),
expand = 0) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
gg_y()
gg_y
EED_dat %>%
mutate(All2_for = c(tail(EED_dat$AlltoPSII, -1), 0),
All2_back = c(0, head(EED_dat$AlltoPSII, -1)),
AlltoPSII = (AlltoPSII + All2_for + All2_back) / 3) %>% # get moving average
filter(wavelength > 400)  %>%
replace_na(list(AlltoPSII = 0)) %>%
ggplot(aes(x = wavelength, y = AlltoPSII)) +
theme_bw2() +
theme(panel.grid.major = element_blank()) +
geom_hline(yintercept = 0.5, col = "grey50", linetype = 3) +
gg_x(c(380, 770)) +
# geom_ribbon(aes(ymin = AlltoPSII_max, ymax = AlltoPSII_min), col = "grey50") +
geom_line() +
scale_y_continuous(labels = c("0    ", "0.25", "0.50", "0.75", "1.00"),
breaks = c(0, 0.25, 0.5, 0.75, 1),
limits = c(0, 1.0),
expand = c(0, 0)) +
xlab("Wavelength [nm]") + ylab("Fraction of the excitation energy distributed to PSII")
source('~/.active-rstudio-document', echo=TRUE)
plot(sine(1:100))
plot(sin(1:100))
plot(sin(1:100), type = "l")
jekyll_()
jekyll_()
jekyll_()
jekyll_()
jekyll_()
jekyll_()
# MyWrite
require(ggplot2)
require(plyr)
require(dplyr)
require(knitr)
require(magrittr)
require(stringr)
require(data.table)
require(lubridate)
require(tidyr)
WriteLog <- function(PubName = ""){
if(PubName == "") stop()
fread("~/Dropbox/R/my.data/MyWrite.csv") %>%
gather(Pub, words, -Date) %>%
na.omit %>%
mutate(Date = mdy(Date)) %>%
filter(Pub %in% PubName) %>%
ggplot(aes(Date, words, group = Pub, col = Pub)) +
theme_bw() +
theme(legend.position = c(.8, .4),
legend.key = element_blank(),
legend.title = element_blank(),
legend.background = element_blank()) +
geom_line() +
geom_point() +
ylab("Words in the body")
}
WriteLog()
# MyWrite
require(ggplot2)
require(plyr)
require(dplyr)
require(knitr)
require(magrittr)
require(stringr)
require(data.table)
require(lubridate)
require(tidyr)
WriteLog <- function(PubName = ""){
if(PubName == ""){
fread("~/Dropbox/R/my.data/MyWrite.csv") %>%
gather(Pub, words, -Date) %>%
na.omit %>%
mutate(Date = mdy(Date)) %>%
ggplot(aes(Date, words, group = Pub, col = Pub)) +
theme_bw() +
theme(legend.position = c(.8, .4),
legend.key = element_blank(),
legend.title = element_blank(),
legend.background = element_blank()) +
geom_line() +
geom_point() +
ylab("Words in the body")
} else {
fread("~/Dropbox/R/my.data/MyWrite.csv") %>%
gather(Pub, words, -Date) %>%
na.omit %>%
mutate(Date = mdy(Date)) %>%
filter(Pub %in% PubName) %>%
ggplot(aes(Date, words, group = Pub, col = Pub)) +
theme_bw() +
theme(legend.position = c(.8, .4),
legend.key = element_blank(),
legend.title = element_blank(),
legend.background = element_blank()) +
geom_line() +
geom_point() +
ylab("Words in the body")
}
}
WriteLog()
library(magrittr)
library(dplyr)
library(knitr)
# Record generator
ToRecord <-
function(title, authors, year, in_what, type, url)
c(Title = title,
Authors = authors,
Year = year,
In = in_what,
Type = type)
AddUnderline <- function(text) paste0("<u>", text, "</u>")
# Frequently appears
KM <- "<FONT color='green'>Keach Murakami</FONT>"
RM <- "Ryo Matsuda"
KF <- "Kazuhiro Fujiwara"
KM_ <- "<FONT color='green'>村上 貴一</FONT>"
RM_ <- "松田 怜"
KF_ <- "富士原 和宏"
ToRecord(
"Light-induced systemic regulation of photosynthesis in primary and trifoliate leaves of <i>Phaseolus vulgaris</i>: effects of photosynthetic photon flux density (PPFD) <i>versus<i/> spectrum",
paste(KM, RM, KF, sep = ",<br> "),
"2014",
"Original Article",
"Plant Biology",
"http://onlinelibrary.wiley.com/doi/10.1111/plb.12055/abstract")
Table generator
ToKable <-
function(PublicationList, in_what){
PublicationList %<>%
matrix(byrow = T, ncol = 5)
colnames(PublicationList) = c('Title', 'Authors', 'Year', 'Type', in_what)
PublicationList %>%
data.frame %>%
arrange(desc(Year), Type) %>%
kable
}
ToRecord(
"Light-induced systemic regulation of photosynthesis in primary and trifoliate leaves of <i>Phaseolus vulgaris</i>: effects of photosynthetic photon flux density (PPFD) <i>versus<i/> spectrum",
paste(KM, RM, KF, sep = ",<br> "),
"2014",
"Original Article",
"Plant Biology",
"http://onlinelibrary.wiley.com/doi/10.1111/plb.12055/abstract") %>% ToKable()
ToRecord(
"Light-induced systemic regulation of photosynthesis in primary and trifoliate leaves of <i>Phaseolus vulgaris</i>: effects of photosynthetic photon flux density (PPFD) <i>versus<i/> spectrum",
paste(KM, RM, KF, sep = ",<br> "),
"2014",
"Original Article",
"Plant Biology",
"http://onlinelibrary.wiley.com/doi/10.1111/plb.12055/abstract") %>% ToKable(in_what = "J")
devtools::source_url("https://raw.githubusercontent.com/KeachMurakami/Sources/master/Startup_silent.R")
jekyll_()
jekyll_()
bib_update()
bib_update()
bib_update()
bib_update()
