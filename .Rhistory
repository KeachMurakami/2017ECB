gg_y(c(0, 2))
InteractionView
directlabels::direct.label(InteractionView, "last.qp")
InteractionDat %>%
ggplot(aes(X, ETR, linetype = Trtm, fill = Trtm, group = Trtm)) +
theme_bw2() +
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(aes(xintercept = x_breaks[1]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[2]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[3]), linetype = 3, size = .75, col = "grey") +
geom_line() +
geom_point(data = InteractionPoint, col = "black", size = 3, shape = 21) +
geom_text(data = InteractionLabel, aes(x = X, y = ETR, label = Trtm), vjust = -1) +
geom_text(data = InteractionText, aes(label = labels), vjust = 1) +
scale_fill_manual(values = c("white", "black")) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_continuous(breaks = c(0.05, 0.95), limits = c(0.05, 0.95), labels = c("PSI-biased", "PSII-biased")) +
xlab("PSII/PSI-biased level of measuring light") +
ylab("Relative electron transport rate") +
gg_y(c(0, 2))
InteractionDat <-
data_frame(X = rep(X_range, times = 2),
ETR = c(sqrt(dbeta(X_range, 4.5, 3.3)) * 1.1, sqrt(dbeta(X_range, 3, 4.5))),
Trtm = rep(c("PSII-leaves", "PSI-leaves"), each = X_div))
InteractionLabel <-
InteractionDat %>%
group_by(Trtm) %>%
summarise(ETR = max(ETR)) %>%
left_join(., InteractionDat, by = c("Trtm", "ETR"))
InteractionPoint <-
InteractionDat %>%
filter(X %in% x_breaks)
InteractionText <-
InteractionDat %>%
filter(X %in% x_breaks) %>%
mutate(labels = c("far-red LED light", "Sunlight", "blue + red LED light", rep("", length(x_breaks)))) %>%
mutate(ETR = c(0.1, 0.1, 0.1, numeric(length(x_breaks))))
InteractionView <-
InteractionDat %>%
ggplot(aes(X, ETR, linetype = Trtm, fill = Trtm, group = Trtm)) +
theme_bw2() +
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(aes(xintercept = x_breaks[1]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[2]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[3]), linetype = 3, size = .75, col = "grey") +
geom_line() +
geom_point(data = InteractionPoint, col = "black", size = 3, shape = 21) +
geom_text(data = InteractionLabel, aes(x = X, y = ETR, label = Trtm), vjust = -1) +
geom_text(data = InteractionText, aes(label = labels), vjust = 1) +
scale_fill_manual(values = c("white", "black")) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_continuous(breaks = c(0.05, 0.95), limits = c(0.05, 0.95), labels = c("PSI-biased", "PSII-biased")) +
xlab("PSII/PSI-biased level of measuring light") +
ylab("Relative electron transport rate") +
gg_y(c(0, 2))
InteractionView
InteractionDat <-
data_frame(X = rep(X_range, times = 2),
ETR = c(sqrt(dbeta(X_range, 4.5, 3.5)) * 1.1, sqrt(dbeta(X_range, 3, 4.5))),
Trtm = rep(c("PSII-leaves", "PSI-leaves"), each = X_div))
InteractionLabel <-
InteractionDat %>%
group_by(Trtm) %>%
summarise(ETR = max(ETR)) %>%
left_join(., InteractionDat, by = c("Trtm", "ETR"))
InteractionPoint <-
InteractionDat %>%
filter(X %in% x_breaks)
InteractionText <-
InteractionDat %>%
filter(X %in% x_breaks) %>%
mutate(labels = c("far-red LED light", "Sunlight", "blue + red LED light", rep("", length(x_breaks)))) %>%
mutate(ETR = c(0.1, 0.1, 0.1, numeric(length(x_breaks))))
InteractionView <-
InteractionDat %>%
ggplot(aes(X, ETR, linetype = Trtm, fill = Trtm, group = Trtm)) +
theme_bw2() +
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(aes(xintercept = x_breaks[1]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[2]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[3]), linetype = 3, size = .75, col = "grey") +
geom_line() +
geom_point(data = InteractionPoint, col = "black", size = 3, shape = 21) +
geom_text(data = InteractionLabel, aes(x = X, y = ETR, label = Trtm), vjust = -1) +
geom_text(data = InteractionText, aes(label = labels), vjust = 1) +
scale_fill_manual(values = c("white", "black")) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_continuous(breaks = c(0.05, 0.95), limits = c(0.05, 0.95), labels = c("PSI-biased", "PSII-biased")) +
xlab("PSII/PSI-biased level of measuring light") +
ylab("Relative electron transport rate") +
gg_y(c(0, 2))
InteractionView
InteractionDat <-
data_frame(X = rep(X_range, times = 2),
ETR = c(sqrt(dbeta(X_range, 4.5, 3.5)) * 1.1, sqrt(dbeta(X_range, 3, 4))),
Trtm = rep(c("PSII-leaves", "PSI-leaves"), each = X_div))
InteractionLabel <-
InteractionDat %>%
group_by(Trtm) %>%
summarise(ETR = max(ETR)) %>%
left_join(., InteractionDat, by = c("Trtm", "ETR"))
InteractionPoint <-
InteractionDat %>%
filter(X %in% x_breaks)
InteractionText <-
InteractionDat %>%
filter(X %in% x_breaks) %>%
mutate(labels = c("far-red LED light", "Sunlight", "blue + red LED light", rep("", length(x_breaks)))) %>%
mutate(ETR = c(0.1, 0.1, 0.1, numeric(length(x_breaks))))
InteractionView <-
InteractionDat %>%
ggplot(aes(X, ETR, linetype = Trtm, fill = Trtm, group = Trtm)) +
theme_bw2() +
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(aes(xintercept = x_breaks[1]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[2]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[3]), linetype = 3, size = .75, col = "grey") +
geom_line() +
geom_point(data = InteractionPoint, col = "black", size = 3, shape = 21) +
geom_text(data = InteractionLabel, aes(x = X, y = ETR, label = Trtm), vjust = -1) +
geom_text(data = InteractionText, aes(label = labels), vjust = 1) +
scale_fill_manual(values = c("white", "black")) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_continuous(breaks = c(0.05, 0.95), limits = c(0.05, 0.95), labels = c("PSI-biased", "PSII-biased")) +
xlab("PSII/PSI-biased level of measuring light") +
ylab("Relative electron transport rate") +
gg_y(c(0, 2))
InteractionView
InteractionDat <-
data_frame(X = rep(X_range, times = 2),
ETR = c(sqrt(dbeta(X_range, 4.5, 3.5)) * 1.1, sqrt(dbeta(X_range, 3, 5))),
Trtm = rep(c("PSII-leaves", "PSI-leaves"), each = X_div))
InteractionLabel <-
InteractionDat %>%
group_by(Trtm) %>%
summarise(ETR = max(ETR)) %>%
left_join(., InteractionDat, by = c("Trtm", "ETR"))
InteractionPoint <-
InteractionDat %>%
filter(X %in% x_breaks)
InteractionText <-
InteractionDat %>%
filter(X %in% x_breaks) %>%
mutate(labels = c("far-red LED light", "Sunlight", "blue + red LED light", rep("", length(x_breaks)))) %>%
mutate(ETR = c(0.1, 0.1, 0.1, numeric(length(x_breaks))))
InteractionView <-
InteractionDat %>%
ggplot(aes(X, ETR, linetype = Trtm, fill = Trtm, group = Trtm)) +
theme_bw2() +
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(aes(xintercept = x_breaks[1]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[2]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[3]), linetype = 3, size = .75, col = "grey") +
geom_line() +
geom_point(data = InteractionPoint, col = "black", size = 3, shape = 21) +
geom_text(data = InteractionLabel, aes(x = X, y = ETR, label = Trtm), vjust = -1) +
geom_text(data = InteractionText, aes(label = labels), vjust = 1) +
scale_fill_manual(values = c("white", "black")) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_continuous(breaks = c(0.05, 0.95), limits = c(0.05, 0.95), labels = c("PSI-biased", "PSII-biased")) +
xlab("PSII/PSI-biased level of measuring light") +
ylab("Relative electron transport rate") +
gg_y(c(0, 2))
InteractionView
InteractionDat %>%
ggplot(aes(X, ETR, linetype = Trtm, fill = Trtm, group = Trtm)) +
theme_bw2() +
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(aes(xintercept = x_breaks[1]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[2]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[3]), linetype = 3, size = .75, col = "grey") +
geom_line() +
geom_point(data = InteractionPoint, col = "black", size = 3, shape = 21) +
geom_text(data = InteractionLabel, aes(x = X, y = ETR, label = Trtm), vjust = -1) +
geom_text(data = InteractionText, aes(label = labels), vjust = 1) +
scale_fill_manual(values = c("white", "black")) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_continuous(breaks = c(0.05, 0.85), limits = c(0.05, 0.85), labels = c("PSI-biased", "PSII-biased")) +
xlab("PSII/PSI-biased level of measuring light") +
ylab("Relative electron transport rate") +
gg_y(c(0, 2))
InteractionDat %>%
ggplot(aes(X, ETR, linetype = Trtm, fill = Trtm, group = Trtm)) +
theme_bw2() +
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(aes(xintercept = x_breaks[1]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[2]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[3]), linetype = 3, size = .75, col = "grey") +
geom_line() +
geom_point(data = InteractionPoint, col = "black", size = 3, shape = 21) +
geom_text(data = InteractionLabel, aes(x = X, y = ETR, label = Trtm), vjust = -1) +
geom_text(data = InteractionText, aes(label = labels), vjust = 1) +
scale_fill_manual(values = c("white", "black")) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_continuous(breaks = c(0.05, 0.95), limits = c(0.05, 0.95), labels = c("PSI-biased", "PSII-biased")) +
xlab("PSII/PSI-biased level of measuring light") +
ylab("Relative electron transport rate") +
gg_y(c(0, 2))
InteractionDat %>%
ggplot(aes(X, ETR, linetype = Trtm, fill = Trtm, group = Trtm)) +
theme_bw2() +
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(aes(xintercept = x_breaks[1]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[2]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[3]), linetype = 3, size = .75, col = "grey") +
geom_line() +
geom_point(data = InteractionPoint, col = "black", size = 3, shape = 21) +
geom_text(data = InteractionLabel, aes(x = X, y = ETR, label = Trtm), vjust = -1) +
geom_text(data = InteractionText, aes(label = labels), vjust = 1) +
scale_fill_manual(values = c("white", "black")) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_continuous(breaks = c(0.05, 0.95), limits = c(0.05, 0.9), labels = c("PSI-biased", "PSII-biased")) +
xlab("PSII/PSI-biased level of measuring light") +
ylab("Relative electron transport rate") +
gg_y(c(0, 2))
InteractionDat %>%
ggplot(aes(X, ETR, linetype = Trtm, fill = Trtm, group = Trtm)) +
theme_bw2() +
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(aes(xintercept = x_breaks[1]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[2]), linetype = 3, size = .75, col = "grey") +
geom_vline(aes(xintercept = x_breaks[3]), linetype = 3, size = .75, col = "grey") +
geom_line() +
geom_point(data = InteractionPoint, col = "black", size = 3, shape = 21) +
geom_text(data = InteractionLabel, aes(x = X, y = ETR, label = Trtm), vjust = -1) +
geom_text(data = InteractionText, aes(label = labels), vjust = 1) +
scale_fill_manual(values = c("white", "black")) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_continuous(breaks = c(0.05, 0.95), limits = c(0.05, 0.95), labels = c("PSI-biased", "PSII-biased")) +
xlab("PSII/PSI-biased level of measuring light") +
ylab("Relative electron transport rate") +
gg_y(c(0, 2))
# Chunk 1: Spectra
# set integrate ranges
PFD_integrate_min <- 350
PFD_integrate_max <- 750
IntegratePFD <- 100
panel_names <- c("(A) HIDs and fluorescent lamp", "(B) LEDs", "(C) Sunlight")
# HID_raw <-
#   fread("~/Dropbox/R/spectrum/HID.csv", skip = 13)
#
# HIDs <-
#   HID_raw %>%
#   setnames(., c("wavelength", paste0("ID", 1:(dim(HID_raw)[2] - 1)))) %>%
#   select(1, HPS_ = 12, MH_ = 21)
FL_Ocean_raw <-
fread("~/Dropbox/materials/SPD_FL.csv") %>%
transmute(wavelength = `Wavelength[nm]`, value = FL) %>%
na.omit
FL_Ocean_PFD <-
smooth.spline(FL_Ocean_raw$wavelength, FL_Ocean_raw$value) %>%
predict(., seq(PFD_integrate_min, PFD_integrate_max)) %>%
.$y %>%
sum
FL_Ocean <-
FL_Ocean_raw %>%
mutate(value = value * 100 / FL_Ocean_PFD, variable = "FL")
HPS_Ocean_raw <-
fread("~/Dropbox/materials/SPD_HPS.txt", skip = 50, nrow = 2000) %>%
rename(wavelength = V1, value = V2)
HPS_Ocean_PFD <-
smooth.spline(HPS_Ocean_raw$wavelength, HPS_Ocean_raw$value) %>%
predict(., seq(PFD_integrate_min, PFD_integrate_max)) %>%
.$y %>%
sum
HPS_Ocean <-
HPS_Ocean_raw %>%
mutate(value = value * 100 / HPS_Ocean_PFD, variable = "HPS")
MH_Ocean_raw <-
fread("~/Dropbox/materials/SPD_MH.txt", skip = 50, nrow = 2000) %>%
rename(wavelength = V1, value = V2)
MH_Ocean_PFD <-
smooth.spline(MH_Ocean_raw$wavelength, MH_Ocean_raw$value) %>%
predict(., seq(PFD_integrate_min, PFD_integrate_max)) %>%
.$y %>%
sum
MH_Ocean <-
MH_Ocean_raw %>%
mutate(value = value * 100 / MH_Ocean_PFD, variable = "MH")
OceanSPDs <-
bind_rows(FL_Ocean, HPS_Ocean, MH_Ocean) %>%
mutate(panel = panel_names[1])
Absorptances <-
fread("~/Dropbox/materials/SpectrumCucumber.csv") %>%
filter(Trtm %in% c("W", "WFR", "FL")) %>%
mutate(wavelength = as.numeric(wavelength)) %>%
filter(variable == "absorption", Trtm == "W")
Sun <-
fread("~/Dropbox/materials/Sunlight_JIS.csv") %>%
setnames(c("wavelength", "Sunlight")) %>%
left_join(., Absorptances, by = "wavelength") %>%
transmute(wavelength, Sun = Sunlight, Shade = Sunlight * (100 - ave), Absorptance = ave)
# Sun: JIS C8904-3
LEDs <-
fread("~/Dropbox/materials/SPD_FL.csv") %>%
transmute(wavelength = `Wavelength[nm]`, W, FR, B = B_HL, R = R_SR) %>%
SPDnorm(from = 350, to = 750, integratedPFD = IntegratePFD) %>%
gather(variable, value, -wavelength) %>%
mutate(panel = panel_names[2]) %>%
na.omit
SPD_labels <-
data_frame(variable = c("FL", "MH", "HPS", "B", "R", "FR", "W", "Sun", "Shade"),
wavelength = c(435, 520, 570, 448, 660, 735, 460, 450, 750),
value = c(2.2, .6, 3, 4, 4.2, 3.8, 1.3, 0.6, 2),
label = c("FL", "MH", "HPS", "B", "R", "FR", "W", "Sun", "Leaf transmitted sunlight"),
panel = rep(panel_names,  c(3, 4, 2)))
SPDs <-
Sun %>%
SPDnorm(from = 350, to = 750, integratedPFD = IntegratePFD) %>%
select(-Absorptance) %>%
gather(variable, value, -wavelength) %>%
mutate(panel = panel_names[3]) %>%
bind_rows(., OceanSPDs, LEDs) %>%
filter(between(wavelength, 380, 820)) %>%
ggplot(aes(x = wavelength, y = value, group = variable, col = variable, linetype = variable)) +
theme_bw2() +
geom_rect(aes(xmin = 700, xmax = 750, ymin = 0, ymax = +Inf), fill = "grey90", col = NA) +
geom_line() +
geom_text(data = SPD_labels, aes(x = wavelength, y = value, label = label)) +
scale_linetype_manual(values = c(1, 1, 3, 2, 4, 2, 2, 1, 4)) +
scale_color_manual(values = c("blue", "black", "darkred", "orange", "purple", "red", "grey50", "black", "black")) +
facet_grid(panel ~ .) +
gg_xy(c(380, 820, 0, 4.5)) +
xlab("Wavelength [nm]") + ylab(u_SPFD("Spectral photon flux density"))
CapSPD <-
"Fig. S1  Spectral photon flux density distribution of light. The distributions at a PFD of 100 µmol m<sup>--2</sup> s<sup>--1</sup> within 400--750 nm are shown. The far-red waveband (700--750 nm) is filled in grey."
theme_grey()
Sun %>%
SPDnorm(from = 350, to = 750, integratedPFD = IntegratePFD) %>%
select(-Absorptance) %>%
gather(variable, value, -wavelength) %>%
mutate(panel = panel_names[3]) %>%
bind_rows(., OceanSPDs, LEDs) %>%
filter(between(wavelength, 380, 820)) %>%
ggplot(aes(x = wavelength, y = value, group = variable, col = variable, linetype = variable)) +
theme_bw2() +
geom_rect(aes(xmin = 700, xmax = 750, ymin = 0, ymax = +Inf), fill = "grey90", col = NA) +
geom_line() +
geom_text(data = SPD_labels, aes(x = wavelength, y = value, label = label)) +
scale_linetype_manual(values = c(1, 1, 3, 2, 4, 2, 2, 1, 4)) +
scale_color_manual(values = c("blue", "black", "darkred", "orange", "purple", "red", "grey50", "black", "black")) +
facet_wrap(panel ~ .) +
gg_xy(c(380, 820, 0, 4.5)) +
xlab("Wavelength [nm]") + ylab(u_SPFD("Spectral photon flux density"))
Sun %>%
SPDnorm(from = 350, to = 750, integratedPFD = IntegratePFD) %>%
select(-Absorptance) %>%
gather(variable, value, -wavelength) %>%
mutate(panel = panel_names[3]) %>%
bind_rows(., OceanSPDs, LEDs) %>%
filter(between(wavelength, 380, 820)) %>%
ggplot(aes(x = wavelength, y = value, group = variable, col = variable, linetype = variable)) +
theme_bw2() +
geom_rect(aes(xmin = 700, xmax = 750, ymin = 0, ymax = +Inf), fill = "grey90", col = NA) +
geom_line() +
geom_text(data = SPD_labels, aes(x = wavelength, y = value, label = label)) +
scale_linetype_manual(values = c(1, 1, 3, 2, 4, 2, 2, 1, 4)) +
scale_color_manual(values = c("blue", "black", "darkred", "orange", "purple", "red", "grey50", "black", "black")) +
# facet_grid(panel ~ .) +
facet_wrap(~ panel, ncol = 1) +
gg_xy(c(380, 820, 0, 4.5)) +
xlab("Wavelength [nm]") + ylab(u_SPFD("Spectral photon flux density"))
theme_bw2 <-
function(base_size = 12, base_family = "", legend = "none"){
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(legend.position = legend,
legend.title = element_blank(),
axis.ticks = element_line(colour = "grey50", size = rel(.75)),
panel.border = element_rect(fill = NA,colour="black"),
strip.background = element_blank(),
strip.text = element_text(vjust = 1),
panel.grid.minor = element_blank(),
panel.margin = unit(0, units = "points")
)
}
Sun %>%
SPDnorm(from = 350, to = 750, integratedPFD = IntegratePFD) %>%
select(-Absorptance) %>%
gather(variable, value, -wavelength) %>%
mutate(panel = panel_names[3]) %>%
bind_rows(., OceanSPDs, LEDs) %>%
filter(between(wavelength, 380, 820)) %>%
ggplot(aes(x = wavelength, y = value, group = variable, col = variable, linetype = variable)) +
theme_bw2() +
geom_rect(aes(xmin = 700, xmax = 750, ymin = 0, ymax = +Inf), fill = "grey90", col = NA) +
geom_line() +
geom_text(data = SPD_labels, aes(x = wavelength, y = value, label = label)) +
scale_linetype_manual(values = c(1, 1, 3, 2, 4, 2, 2, 1, 4)) +
scale_color_manual(values = c("blue", "black", "darkred", "orange", "purple", "red", "grey50", "black", "black")) +
# facet_grid(panel ~ .) +
facet_wrap(~ panel, ncol = 1) +
gg_xy(c(380, 820, 0, 4.5)) +
xlab("Wavelength [nm]") + ylab(u_SPFD("Spectral photon flux density"))
theme_bw2 <-
function(base_size = 12, base_family = "", legend = "none"){
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(legend.position = legend,
legend.title = element_blank(),
axis.ticks = element_line(colour = "grey50", size = rel(.75)),
panel.border = element_rect(fill = NA,colour="black"),
strip.background = element_blank(),
strip.text = element_text(vjust = -1),
panel.grid.minor = element_blank(),
panel.margin = unit(0, units = "points")
)
}
Sun %>%
SPDnorm(from = 350, to = 750, integratedPFD = IntegratePFD) %>%
select(-Absorptance) %>%
gather(variable, value, -wavelength) %>%
mutate(panel = panel_names[3]) %>%
bind_rows(., OceanSPDs, LEDs) %>%
filter(between(wavelength, 380, 820)) %>%
ggplot(aes(x = wavelength, y = value, group = variable, col = variable, linetype = variable)) +
theme_bw2() +
geom_rect(aes(xmin = 700, xmax = 750, ymin = 0, ymax = +Inf), fill = "grey90", col = NA) +
geom_line() +
geom_text(data = SPD_labels, aes(x = wavelength, y = value, label = label)) +
scale_linetype_manual(values = c(1, 1, 3, 2, 4, 2, 2, 1, 4)) +
scale_color_manual(values = c("blue", "black", "darkred", "orange", "purple", "red", "grey50", "black", "black")) +
# facet_grid(panel ~ .) +
facet_wrap(~ panel, ncol = 1) +
gg_xy(c(380, 820, 0, 4.5)) +
xlab("Wavelength [nm]") + ylab(u_SPFD("Spectral photon flux density"))
theme_bw2
theme_bw2()
theme_bw()
}
theme_bw2 <-
function(base_size = 12, base_family = "", legend = "none"){
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(legend.position = legend,
legend.title = element_blank(),
axis.ticks = element_line(colour = "grey50", size = rel(.75)),
panel.border = element_rect(fill = NA,colour="black"),
strip.background = element_blank(),
strip.text = element_text(hjust = -1),
panel.grid.minor = element_blank(),
panel.margin = unit(0, units = "points")
)
}
Sun %>%
SPDnorm(from = 350, to = 750, integratedPFD = IntegratePFD) %>%
select(-Absorptance) %>%
gather(variable, value, -wavelength) %>%
mutate(panel = panel_names[3]) %>%
bind_rows(., OceanSPDs, LEDs) %>%
filter(between(wavelength, 380, 820)) %>%
ggplot(aes(x = wavelength, y = value, group = variable, col = variable, linetype = variable)) +
theme_bw2() +
geom_rect(aes(xmin = 700, xmax = 750, ymin = 0, ymax = +Inf), fill = "grey90", col = NA) +
geom_line() +
geom_text(data = SPD_labels, aes(x = wavelength, y = value, label = label)) +
scale_linetype_manual(values = c(1, 1, 3, 2, 4, 2, 2, 1, 4)) +
scale_color_manual(values = c("blue", "black", "darkred", "orange", "purple", "red", "grey50", "black", "black")) +
# facet_grid(panel ~ .) +
facet_wrap(~ panel, ncol = 1) +
gg_xy(c(380, 820, 0, 4.5)) +
xlab("Wavelength [nm]") + ylab(u_SPFD("Spectral photon flux density"))
theme_bw2 <-
function(base_size = 12, base_family = "", legend = "none"){
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(legend.position = legend,
legend.title = element_blank(),
axis.ticks = element_line(colour = "grey50", size = rel(.75)),
panel.border = element_rect(fill = NA,colour="black"),
strip.background = element_blank(),
strip.text = element_text(hjust = 0),
panel.grid.minor = element_blank(),
panel.margin = unit(0, units = "points")
)
}
Sun %>%
SPDnorm(from = 350, to = 750, integratedPFD = IntegratePFD) %>%
select(-Absorptance) %>%
gather(variable, value, -wavelength) %>%
mutate(panel = panel_names[3]) %>%
bind_rows(., OceanSPDs, LEDs) %>%
filter(between(wavelength, 380, 820)) %>%
ggplot(aes(x = wavelength, y = value, group = variable, col = variable, linetype = variable)) +
theme_bw2() +
geom_rect(aes(xmin = 700, xmax = 750, ymin = 0, ymax = +Inf), fill = "grey90", col = NA) +
geom_line() +
geom_text(data = SPD_labels, aes(x = wavelength, y = value, label = label)) +
scale_linetype_manual(values = c(1, 1, 3, 2, 4, 2, 2, 1, 4)) +
scale_color_manual(values = c("blue", "black", "darkred", "orange", "purple", "red", "grey50", "black", "black")) +
# facet_grid(panel ~ .) +
facet_wrap(~ panel, ncol = 1) +
gg_xy(c(380, 820, 0, 4.5)) +
xlab("Wavelength [nm]") + ylab(u_SPFD("Spectral photon flux density"))
bib_update()
read.csv("List.bib")
read.delim("List.bib")
read.delim("List.bib") %>% str
